spring:
  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher
  quartz:
    job-store-type: jdbc # 使用数据库存储
    scheduler-name: hyhScheduler # 相同 Scheduler 名字的节点，形成一个 Quartz 集群
    wait-for-jobs-to-complete-on-shutdown: true # 应用关闭时，是否等待定时任务执行完成。默认为 false ，建议设置为 true
    jdbc:
      initialize-schema: never # 是否自动使用 SQL 初始化 Quartz 表结构。这里设置成 never ，我们手动创建表结构。
#    properties:
#      org:
#        quartz:
#          # JobStore 相关配置
#          jobStore:
#            dataSource: quartzDataSource # 使用的数据源
#            class: org.quartz.impl.jdbcjobstore.JobStoreTX # JobStore 实现类
#            driverDelegateClass: org.quartz.impl.jdbcjobstore.StdJDBCDelegate
#            tablePrefix: qrtz_ # Quartz 表前缀
#            isClustered: true # 是集群模式
#            clusterCheckinInterval: 1000
#            useProperties: false
#          # 线程池相关配置
#          threadPool:
#            threadCount: 25 # 线程池大小。默认为 10 。
#            threadPriority: 5 # 线程优先级
#            class: org.quartz.simpl.SimpleThreadPool # 线程池类型
  datasource:
    url: ${JDBC_URL:jdbc:mysql://192.168.0.108:3306/quartz_demo?useUnicode=true&serverTimezone=Asia/Shanghai&characterEncoding=utf-8&autoReconnect=true&allowMultiQueries=true&useSSL=false&serverTimezone=GMT}
    username: ${JDBC_USERNAME:root}
    password: ${JDBC_PASSWORD:root123456}
    driverClassName: com.mysql.cj.jdbc.Driver